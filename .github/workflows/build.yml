name: Build and Push Lobby Image
on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**' # Trigger only if something in /src/* changes
  pull_request:
    branches: [ "main" ]
    paths:
      - 'src/**' # Trigger only if something in /src/* changes
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'

      - name: Setup Gradle 8.8
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: 8.8

      - name: Cache Gradle wrapper
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/wrapper/
            ~/.gradle/caches/
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Read Version from gradle.properties
        id: get_version
        run: |
          VERSION=$(grep "^version" gradle.properties | cut -d'=' -f2 | tr -d ' ')
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build with Gradle
        run: gradle build --build-cache

      - name: Remove sources artifact
        run: rm build/libs/*sources.jar

      - name: Rename artifact
        run: cp build/libs/*.jar build/libs/PlayerPersistence-${{ env.VERSION }}.jar

      - name: Publish JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: playerpersistence
          path: build/libs/*.jar

      # Create a new GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ env.VERSION }}
          release_name: "Release v${{ env.VERSION }}"
          body: "Auto-generated release for build v${{ env.VERSION }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload the .jar to GitHub release assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/libs/PlayerPersistence-${{ env.VERSION }}.jar
          asset_name: playerpersistence-${{ env.VERSION }}.jar
          asset_content_type: application/java-archive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the .jar to Modrinth
      - name: Upload to Modrinth
        uses: cloudnode-pro/modrinth-publish@1.0.0
        with:
          token: '${{ secrets.MODRINTH_TOKEN }}' # You need to create this secret in your repository settings
          project: AFthCZHM # Replace with your project id/slug
          file: 'build/libs/PlayerPersistence-${{ env.VERSION }}.jar' # Make sure that this matches the file name of your .jar
          changelog: "Auto-generated release for build v${{ env.VERSION }}"
          loaders: 'fabric, quilt' # A list of your supported loaders
